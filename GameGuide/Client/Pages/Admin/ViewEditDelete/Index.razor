@page "/view"
@attribute [Authorize]
@inject HttpClient _client

<h3 class="card-title">Admin Viewing Page</h3>

<br />

<table class="table table-responsive">
        <thead>
            <tr>
                <th>Name</th>
                <th>Count</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    <a href="/games/view" class="btn btn-outline-dark">
                            <span></span>Games
                    </a>
                </td>
                @if (Games is not null)
                {
                    <td>@Games.Count</td>
                }
                else
                {
                    <td>0</td>
                }
            </tr>
            <tr>
                <td>
                    <a href="/categories/view" class="btn btn-outline-dark">
                        <span></span>Categories
                    </a>
                </td>
            @if (Categories is not null)
            {
                <td>@Categories.Count</td>
            }
            else
            {
                <td>0</td>
            }
            </tr>
            <tr>
                <td>
                    <a href="/posts/view" class="btn btn-outline-dark">
                        <span></span>Posts
                    </a>
                </td>
            @if (Posts is not null)
            {
                <td>@Posts.Count</td>
            }
            else
            {
                <td>0</td>
            }
            </tr>
            <tr>
                <td>
                    <a href="/images/view" class="btn btn-outline-dark">
                        <span></span>Images
                    </a>
                </td>
            @if (Images is not null)
            {
                <td>@Images.Count</td>
            }
            else
            {
                <td>0</td>
            }
            </tr>
            <tr>
                <td>
                    <a href="/suggestions/view" class="btn btn-outline-dark">
                        <span></span>Suggestions
                    </a>
                </td>
                @if (Suggestions is not null)
                {
                    <td>@Suggestions.Count</td>
                }
                else
                {
                    <td>0</td>
                }
            </tr>
            <tr>
                <td>
                    <a href="/tags/view" class="btn btn-outline-dark">
                        <span></span>Tags
                    </a>
                </td>
                @if (Tags is not null)
                {
                    <td>@Tags.Count</td>
                }
                else
                {
                    <td>0</td>
                }
            </tr>
            <tr>
                <td>
                    <a href="/posttags/view" class="btn btn-outline-dark">
                        <span></span>Post Tags
                    </a>
                </td>
                @if (PostTags is not null)
                {
                    <td>@PostTags.Count</td>
                }
                else
                {
                    <td>0</td>
                }
            </tr>
        </tbody>
    </table>

@code {
    private IList<Post>? Posts;
    private IList<Game>? Games;
    private IList<Category>? Categories;
    private IList<Image>? Images;
    private IList<Suggestion>? Suggestions;
    private IList<Tag>? Tags;
    private IList<PostTag>? PostTags;

    protected async override Task OnInitializedAsync()
    {
        Posts = await _client.GetFromJsonAsync<List<Post>>($"{Endpoints.PostsEndpoint}");
        Games = await _client.GetFromJsonAsync<List<Game>>($"{Endpoints.GamesEndpoint}");
        Categories = await _client.GetFromJsonAsync<List<Category>>($"{Endpoints.CategoriesEndpoint}");
        Images = await _client.GetFromJsonAsync<List<Image>>($"{Endpoints.ImagesEndpoint}");
        Suggestions = await _client.GetFromJsonAsync<List<Suggestion>>($"{Endpoints.SuggestionsEndpoint}");
        Tags = await _client.GetFromJsonAsync<List<Tag>>($"{Endpoints.TagsEndpoint}");
        PostTags = await _client.GetFromJsonAsync<List<PostTag>>($"{Endpoints.PostTagsEndpoint}");
    }
}