@page "/posts/view"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]
@implements IDisposable

<h3 class="card-title">View All Posts</h3>

@if (Posts == null)
{
    <div class="alert alert-info">Loading Posts...</div>
}
else
{
    <table class="table table-responsive" id="postsTable">
        <thead>
            <tr>
                <th>Post Title</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var post in Posts)
            {
                <tr>
                    <td>@post.Title</td>
                    <td>
                        <a href="/posts/view/@post.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/posts/edit/@post.Id" class="btn btn-primary">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(() =>Delete(post.Id))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td> 
                </tr>
            }
        </tbody>
    </table>
}
<a href="/view" class="btn btn-outline-dark">
    <span></span>Back to Admin View Page
</a>
@code {
    private IList<Post>? Posts;

    protected async override Task OnInitializedAsync()
    {
        Posts = await _client.GetFromJsonAsync<List<Post>>($"{Endpoints.PostsEndpoint}");
    }

    async Task Delete(int postId)
    {
        if (Posts is not null)
        {
            var post = Posts.First(q => q.Id == postId);
            var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {post.Title}?");
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.PostsEndpoint}/{postId}");
                await OnInitializedAsync();
            }
        }
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await js.InvokeVoidAsync("AddDataTable", "#postsTable");
    }

    public void Dispose()
    {
        js.InvokeVoidAsync("DataTablesDispose", "#postsTable");
    }
}
