@page "/create/games"
@inject HttpClient _client
@inject NavigationManager _navManager
@attribute [Authorize]

<h3 class="card-title">Create New Games</h3>
<hr />
<br />

<EditForm Model="@game" OnValidSubmit="CreateGame">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Game Name: </label>
        <div>
            <InputText @bind-Value="@game.Name" class="form-control" />
            <ValidationMessage For="@(() => game.Name)" />
        </div>
    </div>

    <div class="form-group">
        <label>Game Description: </label>
        <div>
            <InputText @bind-Value="@game.Description" class="form-control" />
            <ValidationMessage For="@(() => game.Description)" />
        </div>
    </div>
    <br />
    <button type="submit" class="btn btn-success btn-block">
        Create Game
    </button>
</EditForm>

@code {
    Game game = new Game();

    private IList<Game>? Games;

    protected async override Task OnInitializedAsync()
    {
        Games = await _client.GetFromJsonAsync<List<Game>>($"{Endpoints.GamesEndpoint}");

    }

    private async Task CreateGame()
    {
        await _client.PostAsJsonAsync(Endpoints.GamesEndpoint, game);
        _navManager.NavigateTo("/create/");
    }
}
